// Generated by CoffeeScript 1.8.0
"use strict";
var doHTTPS, fs, https, options, requestOptions, soapXML, swig, sys, system, template, url, user;

sys = require("sys");

https = require("https");

fs = require("fs");

url = require("url");

swig = require("swig");

options = {
  host: "xml.proveid.experian.com",
  path: "/IDSearch.cfc?wsdl",
  action: "Search",
  encoding: "utf8"
};

system = {
  auth: {
    username: "edudo_test",
    password: "Marthad0g"
  },
  country: "GBR",
  product: "ProveID_KYC"
};

user = {
  forename: "Mark",
  surname: "Irving",
  dob: "1988-04-26",
  gender: "M",
  address: {
    premise: "54 Norwich Street Dereham Norfolk",
    postcode: "NR191AD",
    country: "GBR"
  }
};

console.log("options:", options);

console.log("system:", system);

console.log("user:", user);

template = swig.compileFile("./search.template");

soapXML = template({
  system: system,
  user: user
});

console.log("Template:", soapXML);

requestOptions = {
  host: options.host,
  path: options.path,
  method: "POST",
  headers: {
    "SOAPAction": options.action,
    "Content-Type": "text/xml"
  }
};

console.log("requestOptions", requestOptions);

requestOptions.body = soapXML;

doHTTPS = function(options, success, error) {
  var req;
  req = https.request(requestOptions, function(res) {
    var data;
    console.log("STATUS", res.statusCode);
    console.log("HEADERS", res.headers);
    data = "";
    res.setEncoding(options.encoding);
    res.on("error", function(err) {
      return error("RESPONSE ERROR: " + err.message);
    });
    res.on("data", function(chunk) {
      return data += chunk;
    });
    return res.on("end", function() {
      return success({
        data: data
      });
    });
  });
  req.write(options.body);
  req.end();
  return req.on("error", function(err) {
    return error("REQUEST ERROR: " + err.message);
  });
};

doHTTPS(requestOptions, (function(data) {
  console.log("SUCCESS:", data);
}), function(err) {
  console.log("ERROR", err);
});
